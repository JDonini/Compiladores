
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'LPAREN RPAREN LCOR RCOR LKEY RKEY COMMA SEMICOLON ID NUMBER STRING_LITERAL PLUS MINUS MULT DIVIDE EQUALS DIFFERENT GT GTE LT LTE MOD UMINUS OR AND NOT ASSIGN PLUSASSIGN MINUSASSIGN MULTASSIGN DIVIDEASSIGN MODASSIGN QMARK COLON RETURN INT WHILE FALSE TRUE BREAK IF ELSE STRING READ WRITE BOOLEAN FOR\n    program : decSeq\n    \n    dec : varDec\n        | ID LPAREN paramList RPAREN LKEY block RKEY\n        | type ID LPAREN paramList RPAREN LKEY block RKEY\n    \n    varDec : type varSpecSeq SEMICOLON\n    \n    varSpec : ID\n            | ID ASSIGN literal\n            | ID LCOR NUMBER RCOR\n            | ID LCOR NUMBER RCOR ASSIGN LKEY literalSeq RKEY\n    \n    type : INT\n         | STRING\n         | BOOLEAN\n    \n    param : type ID\n          | type ID RCOR LCOR\n    \n    block : varDecList stmtList\n    \n    stmt : ifStmt\n         | whileStmt\n         | forStmt\n         | breakStmt\n         | returnStmt\n         | readStmt\n         | writeStmt\n         | assign SEMICOLON\n         | subCall SEMICOLON\n         | error\n    \n    ifStmt : IF LPAREN exp RPAREN LKEY block RKEY\n           | IF LPAREN exp RPAREN LKEY block RKEY ELSE LKEY block RKEY\n    \n    whileStmt : WHILE LPAREN exp RPAREN LKEY block RKEY\n    \n    forStmt : FOR LPAREN assign SEMICOLON exp SEMICOLON assign RPAREN LKEY block RKEY\n    \n    breakStmt : BREAK SEMICOLON\n    \n    readStmt : READ var SEMICOLON\n    \n    writeStmt : WRITE expList SEMICOLON\n    \n    returnStmt : RETURN SEMICOLON\n               | RETURN exp SEMICOLON\n    \n    subCall : ID LPAREN expList RPAREN\n    \n    assign : var ASSIGN exp\n           | var PLUSASSIGN exp\n           | var MINUSASSIGN exp\n           | var MULTASSIGN exp\n           | var DIVIDEASSIGN exp\n           | var MODASSIGN exp\n    \n    exp : exp PLUS exp\n        | exp MINUS exp\n        | exp MULT exp\n        | exp DIVIDE exp\n        | exp MOD exp\n    \n    exp : exp EQUALS exp\n        | exp DIFFERENT exp\n        | exp GT exp\n        | exp GTE exp\n        | exp LT exp\n        | exp LTE exp\n    \n    exp : exp AND exp\n        | exp OR exp\n        | NOT exp\n        | UMINUS exp\n    \n    exp : exp QMARK exp COLON exp\n    \n    exp : subCall\n    \n    exp : var\n    \n    exp : literal\n    \n    exp : LPAREN exp RPAREN\n    \n    var : ID\n        | ID LCOR exp RCOR\n    \n    literal : NUMBER\n            | STRING_LITERAL\n            | FALSE\n            | TRUE\n    \n    paramList : paramSeq\n              | empty\n    \n    paramSeq : param\n             | param COMMA paramSeq\n    \n    varDecList : varDec varDecList\n               | empty\n    \n    varSpecSeq : varSpec\n               | varSpec COMMA varSpecSeq\n    \n    decSeq : dec\n           | dec decSeq\n    \n    stmtList : stmt stmtList\n             | empty\n    \n    literalSeq : literal\n               | literal COMMA literalSeq\n    \n    expList : expSeq\n            | empty\n    \n    expSeq : exp\n           | exp COMMA expSeq\n    empty :'
    
_lr_action_items = {'WHILE':([16,41,43,46,48,49,53,55,59,60,63,65,66,68,70,71,88,89,96,107,120,130,140,164,167,172,174,177,178,181,182,],[-5,-86,-86,-86,54,-73,-72,-25,-21,-16,-17,54,-18,-19,-20,-22,-33,-24,-23,-30,-34,-32,-31,-86,-86,-28,-26,-86,-86,-29,-27,]),'error':([16,41,43,46,48,49,53,55,59,60,63,65,66,68,70,71,88,89,96,107,120,130,140,164,167,172,174,177,178,181,182,],[-5,-86,-86,-86,55,-73,-72,-25,-21,-16,-17,55,-18,-19,-20,-22,-33,-24,-23,-30,-34,-32,-31,-86,-86,-28,-26,-86,-86,-29,-27,]),'MULT':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-61,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-63,-35,115,115,]),'FOR':([16,41,43,46,48,49,53,55,59,60,63,65,66,68,70,71,88,89,96,107,120,130,140,164,167,172,174,177,178,181,182,],[-5,-86,-86,-86,56,-73,-72,-25,-21,-16,-17,56,-18,-19,-20,-22,-33,-24,-23,-30,-34,-32,-31,-86,-86,-28,-26,-86,-86,-29,-27,]),'RETURN':([16,41,43,46,48,49,53,55,59,60,63,65,66,68,70,71,88,89,96,107,120,130,140,164,167,172,174,177,178,181,182,],[-5,-86,-86,-86,57,-73,-72,-25,-21,-16,-17,57,-18,-19,-20,-22,-33,-24,-23,-30,-34,-32,-31,-86,-86,-28,-26,-86,-86,-29,-27,]),'RCOR':([27,29,30,31,32,35,62,81,84,86,113,114,132,145,146,147,148,149,151,152,153,154,155,156,157,158,159,161,162,170,],[37,-65,-67,-66,-64,40,-62,-58,-59,-60,-56,-55,161,-61,-44,-51,-45,-49,-52,-43,-42,-50,-54,-48,-46,-53,-47,-63,-35,-57,]),'ELSE':([174,],[176,]),'LTE':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-61,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-63,-35,121,121,]),'TRUE':([18,50,57,61,79,82,83,85,94,95,98,99,100,101,102,103,106,108,115,116,117,118,119,121,122,123,124,125,126,127,128,129,131,144,166,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'EQUALS':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,129,129,129,129,129,129,129,129,129,129,129,129,129,129,-61,129,129,129,129,129,129,129,129,129,129,129,129,129,129,-63,-35,129,129,]),'LPAREN':([7,12,54,56,57,61,62,74,79,82,83,85,94,95,98,99,100,101,102,103,106,115,116,117,118,119,121,122,123,124,125,126,127,128,129,131,144,166,],[14,19,79,80,82,82,95,106,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'NUMBER':([17,18,50,57,61,79,82,83,85,94,95,98,99,100,101,102,103,106,108,115,116,117,118,119,121,122,123,124,125,126,127,128,129,131,144,166,],[27,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'FALSE':([18,50,57,61,79,82,83,85,94,95,98,99,100,101,102,103,106,108,115,116,117,118,119,121,122,123,124,125,126,127,128,129,131,144,166,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'BOOLEAN':([0,2,5,14,16,19,34,41,43,46,52,78,164,167,177,178,],[6,-2,6,6,-5,6,6,6,6,6,-3,-4,6,6,6,6,]),'DIVIDE':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-61,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-63,-35,117,117,]),'MULTASSIGN':([62,69,104,161,],[-62,102,-62,-63,]),'UMINUS':([57,61,79,82,83,85,94,95,98,99,100,101,102,103,106,115,116,117,118,119,121,122,123,124,125,126,127,128,129,131,144,166,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'MINUSASSIGN':([62,69,104,161,],[-62,98,-62,-63,]),'MODASSIGN':([62,69,104,161,],[-62,100,-62,-63,]),'GTE':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,124,124,124,124,124,124,124,124,124,124,124,124,124,124,-61,124,124,124,124,124,124,124,124,124,124,124,124,124,124,-63,-35,124,124,]),'PLUSASSIGN':([62,69,104,161,],[-62,103,-62,-63,]),'DIFFERENT':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-61,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-63,-35,126,126,]),'LKEY':([36,38,42,143,163,175,176,],[41,43,50,164,167,177,178,]),'STRING_LITERAL':([18,50,57,61,79,82,83,85,94,95,98,99,100,101,102,103,106,108,115,116,117,118,119,121,122,123,124,125,126,127,128,129,131,144,166,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'AND':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-61,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-63,-35,128,128,]),'LCOR':([12,26,40,62,104,],[17,17,44,94,94,]),'INT':([0,2,5,14,16,19,34,41,43,46,52,78,164,167,177,178,],[1,-2,1,1,-5,1,1,1,1,1,-3,-4,1,1,1,1,]),'MINUS':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-61,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-63,-35,122,122,]),'WRITE':([16,41,43,46,48,49,53,55,59,60,63,65,66,68,70,71,88,89,96,107,120,130,140,164,167,172,174,177,178,181,182,],[-5,-86,-86,-86,61,-73,-72,-25,-21,-16,-17,61,-18,-19,-20,-22,-33,-24,-23,-30,-34,-32,-31,-86,-86,-28,-26,-86,-86,-29,-27,]),'PLUS':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-61,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-63,-35,123,123,]),'RKEY':([16,29,30,31,32,41,43,45,46,48,49,51,53,55,59,60,63,65,66,67,68,70,71,72,76,77,88,89,96,97,107,120,130,140,142,164,167,168,171,172,174,177,178,179,180,181,182,],[-5,-65,-67,-66,-64,-86,-86,52,-86,-86,-73,78,-72,-25,-21,-16,-17,-86,-18,-15,-19,-20,-22,-79,-80,109,-33,-24,-23,-78,-30,-34,-32,-31,-81,-86,-86,172,174,-28,-26,-86,-86,181,182,-29,-27,]),'ID':([0,1,2,4,5,6,9,15,16,21,41,43,46,47,48,49,52,53,55,57,59,60,61,63,65,66,68,70,71,73,78,79,80,82,83,85,88,89,94,95,96,98,99,100,101,102,103,106,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,140,144,164,166,167,169,172,174,177,178,181,182,],[7,-10,-2,12,7,-12,-11,26,-5,35,-86,-86,-86,26,62,-73,-3,-72,-25,62,-21,-16,62,-17,62,-18,-19,-20,-22,104,-4,62,104,62,62,62,-33,-24,62,62,-23,62,62,62,62,62,62,62,-30,62,62,62,62,62,-34,62,62,62,62,62,62,62,62,62,-32,62,-31,62,-86,62,-86,104,-28,-26,-86,-86,-29,-27,]),'QMARK':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-61,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-63,-35,119,119,]),'LT':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-61,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-63,-35,116,116,]),'COLON':([29,30,31,32,62,81,84,86,113,114,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,170,],[-65,-67,-66,-64,-62,-58,-59,-60,-56,-55,-61,-44,-51,-45,-49,166,-52,-43,-42,-50,-54,-48,-46,-53,-47,-63,-35,-57,]),'RPAREN':([14,19,20,22,23,24,29,30,31,32,33,35,39,44,62,81,84,86,91,92,93,95,110,112,113,114,133,134,135,136,137,138,139,141,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,170,173,],[-86,-86,-70,-68,-69,36,-65,-67,-66,-64,38,-13,-71,-14,-62,-58,-59,-60,-83,-84,-82,-86,143,145,-56,-55,162,-38,-36,-41,-40,-39,-37,163,-61,-44,-51,-45,-49,-52,-43,-42,-50,-54,-48,-46,-53,-47,-85,-63,-35,-57,175,]),'GT':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-61,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-63,-35,118,118,]),'$end':([2,3,5,8,13,16,52,78,],[-2,-1,-76,0,-77,-5,-3,-4,]),'NOT':([57,61,79,82,83,85,94,95,98,99,100,101,102,103,106,115,116,117,118,119,121,122,123,124,125,126,127,128,129,131,144,166,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'ASSIGN':([12,26,37,62,69,104,161,],[18,18,42,-62,99,-62,-63,]),'DIVIDEASSIGN':([62,69,104,161,],[-62,101,-62,-63,]),'STRING':([0,2,5,14,16,19,34,41,43,46,52,78,164,167,177,178,],[9,-2,9,9,-5,9,9,9,9,9,-3,-4,9,9,9,9,]),'READ':([16,41,43,46,48,49,53,55,59,60,63,65,66,68,70,71,88,89,96,107,120,130,140,164,167,172,174,177,178,181,182,],[-5,-86,-86,-86,73,-73,-72,-25,-21,-16,-17,73,-18,-19,-20,-22,-33,-24,-23,-30,-34,-32,-31,-86,-86,-28,-26,-86,-86,-29,-27,]),'IF':([16,41,43,46,48,49,53,55,59,60,63,65,66,68,70,71,88,89,96,107,120,130,140,164,167,172,174,177,178,181,182,],[-5,-86,-86,-86,74,-73,-72,-25,-21,-16,-17,74,-18,-19,-20,-22,-33,-24,-23,-30,-34,-32,-31,-86,-86,-28,-26,-86,-86,-29,-27,]),'BREAK':([16,41,43,46,48,49,53,55,59,60,63,65,66,68,70,71,88,89,96,107,120,130,140,164,167,172,174,177,178,181,182,],[-5,-86,-86,-86,75,-73,-72,-25,-21,-16,-17,75,-18,-19,-20,-22,-33,-24,-23,-30,-34,-32,-31,-86,-86,-28,-26,-86,-86,-29,-27,]),'MOD':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-61,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-63,-35,127,127,]),'COMMA':([10,12,20,26,28,29,30,31,32,35,37,44,62,76,81,84,86,92,109,113,114,145,146,147,148,149,151,152,153,154,155,156,157,158,159,161,162,170,],[15,-6,34,-6,-7,-65,-67,-66,-64,-13,-8,-14,-62,108,-58,-59,-60,131,-9,-56,-55,-61,-44,-51,-45,-49,-52,-43,-42,-50,-54,-48,-46,-53,-47,-63,-35,-57,]),'OR':([29,30,31,32,62,81,84,86,87,92,110,112,113,114,132,134,135,136,137,138,139,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,165,170,],[-65,-67,-66,-64,-62,-58,-59,-60,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-61,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-63,-35,125,125,]),'SEMICOLON':([10,11,12,25,26,28,29,30,31,32,37,57,58,61,62,64,75,81,84,86,87,90,91,92,93,104,105,109,111,113,114,134,135,136,137,138,139,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,165,170,],[-74,16,-6,-75,-6,-7,-65,-67,-66,-64,-8,88,89,-86,-62,96,107,-58,-59,-60,120,130,-83,-84,-82,-62,140,-9,144,-56,-55,-38,-36,-41,-40,-39,-37,-61,-44,-51,-45,-49,-52,-43,-42,-50,-54,-48,-46,-53,-47,-85,-63,-35,169,-57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'param':([14,19,34,],[20,20,20,]),'block':([41,43,164,167,177,178,],[45,51,168,171,179,180,]),'subCall':([48,57,61,65,79,82,83,85,94,95,98,99,100,101,102,103,106,115,116,117,118,119,121,122,123,124,125,126,127,128,129,131,144,166,],[58,81,81,58,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'varDec':([0,5,41,43,46,164,167,177,178,],[2,2,46,46,46,46,46,46,46,]),'decSeq':([0,5,],[3,13,]),'type':([0,5,14,19,34,41,43,46,164,167,177,178,],[4,4,21,21,21,47,47,47,47,47,47,47,]),'varDecList':([41,43,46,164,167,177,178,],[48,48,53,48,48,48,48,]),'paramSeq':([14,19,34,],[22,22,39,]),'expList':([61,95,],[90,133,]),'varSpec':([4,15,47,],[10,10,10,]),'ifStmt':([48,65,],[60,60,]),'varSpecSeq':([4,15,47,],[11,25,11,]),'returnStmt':([48,65,],[70,70,]),'program':([0,],[8,]),'assign':([48,65,80,169,],[64,64,111,173,]),'literal':([18,50,57,61,79,82,83,85,94,95,98,99,100,101,102,103,106,108,115,116,117,118,119,121,122,123,124,125,126,127,128,129,131,144,166,],[28,76,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,76,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'forStmt':([48,65,],[66,66,]),'stmtList':([48,65,],[67,97,]),'whileStmt':([48,65,],[63,63,]),'writeStmt':([48,65,],[71,71,]),'var':([48,57,61,65,73,79,80,82,83,85,94,95,98,99,100,101,102,103,106,115,116,117,118,119,121,122,123,124,125,126,127,128,129,131,144,166,169,],[69,84,84,69,105,84,69,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,69,]),'dec':([0,5,],[5,5,]),'empty':([14,19,41,43,46,48,61,65,95,164,167,177,178,],[23,23,49,49,49,72,91,72,91,49,49,49,49,]),'breakStmt':([48,65,],[68,68,]),'stmt':([48,65,],[65,65,]),'exp':([57,61,79,82,83,85,94,95,98,99,100,101,102,103,106,115,116,117,118,119,121,122,123,124,125,126,127,128,129,131,144,166,],[87,92,110,112,113,114,132,92,134,135,136,137,138,139,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,92,165,170,]),'literalSeq':([50,108,],[77,142,]),'paramList':([14,19,],[24,33,]),'readStmt':([48,65,],[59,59,]),'expSeq':([61,95,131,],[93,93,160,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> decSeq','program',1,'p_program','analisadorSintatico.py',28),
  ('dec -> varDec','dec',1,'p_dec','analisadorSintatico.py',35),
  ('dec -> ID LPAREN paramList RPAREN LKEY block RKEY','dec',7,'p_dec','analisadorSintatico.py',36),
  ('dec -> type ID LPAREN paramList RPAREN LKEY block RKEY','dec',8,'p_dec','analisadorSintatico.py',37),
  ('varDec -> type varSpecSeq SEMICOLON','varDec',3,'p_varDec','analisadorSintatico.py',49),
  ('varSpec -> ID','varSpec',1,'p_varSpec','analisadorSintatico.py',56),
  ('varSpec -> ID ASSIGN literal','varSpec',3,'p_varSpec','analisadorSintatico.py',57),
  ('varSpec -> ID LCOR NUMBER RCOR','varSpec',4,'p_varSpec','analisadorSintatico.py',58),
  ('varSpec -> ID LCOR NUMBER RCOR ASSIGN LKEY literalSeq RKEY','varSpec',8,'p_varSpec','analisadorSintatico.py',59),
  ('type -> INT','type',1,'p_type','analisadorSintatico.py',73),
  ('type -> STRING','type',1,'p_type','analisadorSintatico.py',74),
  ('type -> BOOLEAN','type',1,'p_type','analisadorSintatico.py',75),
  ('param -> type ID','param',2,'p_param','analisadorSintatico.py',82),
  ('param -> type ID RCOR LCOR','param',4,'p_param','analisadorSintatico.py',83),
  ('block -> varDecList stmtList','block',2,'p_block','analisadorSintatico.py',93),
  ('stmt -> ifStmt','stmt',1,'p_stmt','analisadorSintatico.py',100),
  ('stmt -> whileStmt','stmt',1,'p_stmt','analisadorSintatico.py',101),
  ('stmt -> forStmt','stmt',1,'p_stmt','analisadorSintatico.py',102),
  ('stmt -> breakStmt','stmt',1,'p_stmt','analisadorSintatico.py',103),
  ('stmt -> returnStmt','stmt',1,'p_stmt','analisadorSintatico.py',104),
  ('stmt -> readStmt','stmt',1,'p_stmt','analisadorSintatico.py',105),
  ('stmt -> writeStmt','stmt',1,'p_stmt','analisadorSintatico.py',106),
  ('stmt -> assign SEMICOLON','stmt',2,'p_stmt','analisadorSintatico.py',107),
  ('stmt -> subCall SEMICOLON','stmt',2,'p_stmt','analisadorSintatico.py',108),
  ('stmt -> error','stmt',1,'p_stmt','analisadorSintatico.py',109),
  ('ifStmt -> IF LPAREN exp RPAREN LKEY block RKEY','ifStmt',7,'p_ifStmt','analisadorSintatico.py',119),
  ('ifStmt -> IF LPAREN exp RPAREN LKEY block RKEY ELSE LKEY block RKEY','ifStmt',11,'p_ifStmt','analisadorSintatico.py',120),
  ('whileStmt -> WHILE LPAREN exp RPAREN LKEY block RKEY','whileStmt',7,'p_whileStmt','analisadorSintatico.py',130),
  ('forStmt -> FOR LPAREN assign SEMICOLON exp SEMICOLON assign RPAREN LKEY block RKEY','forStmt',11,'p_forStmt','analisadorSintatico.py',137),
  ('breakStmt -> BREAK SEMICOLON','breakStmt',2,'p_breakStmt','analisadorSintatico.py',144),
  ('readStmt -> READ var SEMICOLON','readStmt',3,'p_readStmt','analisadorSintatico.py',151),
  ('writeStmt -> WRITE expList SEMICOLON','writeStmt',3,'p_writeStmt','analisadorSintatico.py',158),
  ('returnStmt -> RETURN SEMICOLON','returnStmt',2,'p_returnStmt','analisadorSintatico.py',165),
  ('returnStmt -> RETURN exp SEMICOLON','returnStmt',3,'p_returnStmt','analisadorSintatico.py',166),
  ('subCall -> ID LPAREN expList RPAREN','subCall',4,'p_subCall','analisadorSintatico.py',173),
  ('assign -> var ASSIGN exp','assign',3,'p_assign','analisadorSintatico.py',180),
  ('assign -> var PLUSASSIGN exp','assign',3,'p_assign','analisadorSintatico.py',181),
  ('assign -> var MINUSASSIGN exp','assign',3,'p_assign','analisadorSintatico.py',182),
  ('assign -> var MULTASSIGN exp','assign',3,'p_assign','analisadorSintatico.py',183),
  ('assign -> var DIVIDEASSIGN exp','assign',3,'p_assign','analisadorSintatico.py',184),
  ('assign -> var MODASSIGN exp','assign',3,'p_assign','analisadorSintatico.py',185),
  ('exp -> exp PLUS exp','exp',3,'p_expArithmetic','analisadorSintatico.py',192),
  ('exp -> exp MINUS exp','exp',3,'p_expArithmetic','analisadorSintatico.py',193),
  ('exp -> exp MULT exp','exp',3,'p_expArithmetic','analisadorSintatico.py',194),
  ('exp -> exp DIVIDE exp','exp',3,'p_expArithmetic','analisadorSintatico.py',195),
  ('exp -> exp MOD exp','exp',3,'p_expArithmetic','analisadorSintatico.py',196),
  ('exp -> exp EQUALS exp','exp',3,'p_expComparison','analisadorSintatico.py',203),
  ('exp -> exp DIFFERENT exp','exp',3,'p_expComparison','analisadorSintatico.py',204),
  ('exp -> exp GT exp','exp',3,'p_expComparison','analisadorSintatico.py',205),
  ('exp -> exp GTE exp','exp',3,'p_expComparison','analisadorSintatico.py',206),
  ('exp -> exp LT exp','exp',3,'p_expComparison','analisadorSintatico.py',207),
  ('exp -> exp LTE exp','exp',3,'p_expComparison','analisadorSintatico.py',208),
  ('exp -> exp AND exp','exp',3,'p_expLogic','analisadorSintatico.py',215),
  ('exp -> exp OR exp','exp',3,'p_expLogic','analisadorSintatico.py',216),
  ('exp -> NOT exp','exp',2,'p_expLogic','analisadorSintatico.py',217),
  ('exp -> UMINUS exp','exp',2,'p_expLogic','analisadorSintatico.py',218),
  ('exp -> exp QMARK exp COLON exp','exp',5,'p_expTernary','analisadorSintatico.py',228),
  ('exp -> subCall','exp',1,'p_expSubCall','analisadorSintatico.py',235),
  ('exp -> var','exp',1,'p_expVar','analisadorSintatico.py',242),
  ('exp -> literal','exp',1,'p_expLiteral','analisadorSintatico.py',249),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_expMultParent','analisadorSintatico.py',256),
  ('var -> ID','var',1,'p_var','analisadorSintatico.py',263),
  ('var -> ID LCOR exp RCOR','var',4,'p_var','analisadorSintatico.py',264),
  ('literal -> NUMBER','literal',1,'p_literal','analisadorSintatico.py',274),
  ('literal -> STRING_LITERAL','literal',1,'p_literal','analisadorSintatico.py',275),
  ('literal -> FALSE','literal',1,'p_literal','analisadorSintatico.py',276),
  ('literal -> TRUE','literal',1,'p_literal','analisadorSintatico.py',277),
  ('paramList -> paramSeq','paramList',1,'p_paramList','analisadorSintatico.py',284),
  ('paramList -> empty','paramList',1,'p_paramList','analisadorSintatico.py',285),
  ('paramSeq -> param','paramSeq',1,'p_paramSeq','analisadorSintatico.py',293),
  ('paramSeq -> param COMMA paramSeq','paramSeq',3,'p_paramSeq','analisadorSintatico.py',294),
  ('varDecList -> varDec varDecList','varDecList',2,'p_varDecList','analisadorSintatico.py',304),
  ('varDecList -> empty','varDecList',1,'p_varDecList','analisadorSintatico.py',305),
  ('varSpecSeq -> varSpec','varSpecSeq',1,'p_varSpecSeq','analisadorSintatico.py',313),
  ('varSpecSeq -> varSpec COMMA varSpecSeq','varSpecSeq',3,'p_varSpecSeq','analisadorSintatico.py',314),
  ('decSeq -> dec','decSeq',1,'p_decSeq','analisadorSintatico.py',324),
  ('decSeq -> dec decSeq','decSeq',2,'p_decSeq','analisadorSintatico.py',325),
  ('stmtList -> stmt stmtList','stmtList',2,'p_stmtList','analisadorSintatico.py',335),
  ('stmtList -> empty','stmtList',1,'p_stmtList','analisadorSintatico.py',336),
  ('literalSeq -> literal','literalSeq',1,'p_literalSeq','analisadorSintatico.py',344),
  ('literalSeq -> literal COMMA literalSeq','literalSeq',3,'p_literalSeq','analisadorSintatico.py',345),
  ('expList -> expSeq','expList',1,'p_expList','analisadorSintatico.py',355),
  ('expList -> empty','expList',1,'p_expList','analisadorSintatico.py',356),
  ('expSeq -> exp','expSeq',1,'p_expSeq','analisadorSintatico.py',364),
  ('expSeq -> exp COMMA expSeq','expSeq',3,'p_expSeq','analisadorSintatico.py',365),
  ('empty -> <empty>','empty',0,'p_empty','analisadorSintatico.py',374),
]
