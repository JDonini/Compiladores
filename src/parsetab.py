
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "LPAREN RPAREN LCOR RCOR LKEY RKEY COMMA SEMICOLON ID NUMBER PLUS MINUS MULT DIVIDE EQUALS DIFFERENT GT GTE LT LTE OR AND NOT ASSIGN PLUSASSIGN MINUSASSIGN MULTASSIGN DIVIDEASSIGN MODASSIGN TERNARY STRING MOD IF ELSE WHILE FOR RETURN INT BOOLEAN TRUE FALSE BREAK READ WRITE MAIN\n    program ::= sequenciaDeclaracao\n    \n    declaracao ::= variavelDeclaracao\n                | ID LPAREN listaParametro RPAREN LKEY bloco RKEY\n                | tipo ID LPAREN listaParametro RPAREN LKEY bloco RKEY\n    \n    variavelDeclaracao ::= tipo variavelEspecificacaoSeq ';'\n    \n    variavelEspecificacao ::= ID\n                            | ID ASSIGN valor\n                            | ID LCOR NUMBER RCOR\n                            | ID LCOR NUMBER RCOR ASSIGN LKEY sequenciaValor RKEY\n    \n    tipo ::= INT\n          |  STRING\n          |  BOOLEAN\n    \n    parametro ::= tipo ID\n                | tipo ID LCOR RCOR\n    \n    bloco ::= variavelDeclaracaoList listaComando\n    \n    comando ::= comandoIf\n             |  comandoWhile\n             |  comandoFor\n             |  comandoBreak\n             |  comandoReturn\n             |  comandoRead\n             |  comandoWrite\n             |  expressaoAtrib SEMICOLON\n             |  chamadaDeFuncao SEMICOLON\n    \n    comandoIf ::= IF LPAREN expressao RPAREN LKEY bloco RKEY\n                | IF LPAREN expressao LPAREN LKEY bloco RKEY ELSE LKEY bloco RKEY\n    \n    comandoWhile ::= WHILE LPAREN expressao RPAREN LKEY bloco RKEY\n    \n    comandoFor ::= FOR LPAREN expressaoAtrib SEMICOLON expressao SEMICOLON expressaoAtrib RPAREN LKEY bloco RKEY\n    \n    comandoBreak ::= BREAK SEMICOLON\n    \n    comandoRead ::= READ variavel SEMICOLON\n    \n    comandoWrite ::= WRITE listaExpressao SEMICOLON\n    \n    comandoReturn ::= RETURN SEMICOLON\n                     | RETURN expressao SEMICOLON\n    \n    chamadaDeFuncao ::= ID LPAREN listaExpressao RPAREN\n    \n    op ::= PLUS\n        |  MINUS\n        |  MULT\n        |  DIVIDE\n        |  MOD\n        |  EQUALS\n        |  DIFFERENT\n        |  LTE\n        |  GTE\n        |  GT\n        |  LT\n        |  AND\n        |  OR\n    \n    opAtrib ::= ASSIGN\n             |  PLUSASSIGN\n             |  MINUSASSIGN\n             |  MULTASSIGN\n             |  DIVIDEASSIGN\n             |  MODASSIGN\n    \n    expressaoAtrib ::= variavel opAtrib  expressao\n    \n    variavel ::= ID\n               | ID LCOR expressao RCOR\n    \n    expressao ::= expressao op expressao\n             | NOT expressao\n             | MINUS expressao\n             | expressao '?' expressao ':' expressao\n             | chamadaDeFuncao\n             | variavel\n             | valor\n             | LPAREN expressao RPAREN\n    \n    valor ::= NUMBER\n            | STRING\n            | TRUE\n            | FALSE\n    \n    listaParametro ::= sequenciaParametro\n                      | 'ε'\n    \n    program : empty\n    \n    sequenciaParametro ::= parametro COMMA sequenciaParametro\n                          |  parametro\n    \n    variavelDeclaracaoList ::= variavelDeclaracao variavelDeclaracaoList\n                              | 'ε'\n    \n    variavelEspecificacaoSeq ::= variavelEspecificacao COMMA variavelEspecificacaoSeq\n                               |   variavelEspecificacao\n    \n    sequenciaDeclaracao ::= declaracao sequenciaDeclaracao\n                           |   declaracao\n    \n    listaComando ::= comando listaComando\n                    | 'ε'\n    \n    sequenciaValor ::= valor sequenciaValor\n                      |  valor\n    \n    listaExpressao ::= sequenciaExpressao\n                      | 'ε'\n    \n    sequenciaExpressao ::= expressao ',' sequenciaExpressao\n                          |  expressao\n    empty :"
    
_lr_action_items = {'$end':([0,1,2,3,4,5,11,24,51,106,],[-88,0,-1,-71,-79,-2,-78,-5,-3,-4,]),'ID':([0,4,5,7,8,9,10,20,24,25,44,46,47,51,53,55,56,57,58,59,60,61,68,69,71,73,77,78,79,80,81,82,83,85,86,90,93,94,95,96,97,98,99,104,105,106,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,133,134,142,153,157,160,161,169,170,],[6,6,-2,13,-10,-11,-12,28,-5,37,72,-75,37,-3,72,-16,-17,-18,-19,-20,-21,-22,72,92,72,-74,-23,-24,72,72,92,-29,-32,72,72,72,72,-48,-49,-50,-51,-52,-53,72,72,-4,-33,72,72,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-30,-31,72,72,72,92,-25,-27,-26,-28,]),'INT':([0,4,5,12,21,24,27,38,45,49,51,106,149,150,151,165,166,],[8,8,-2,8,8,-5,8,8,8,8,-3,-4,8,8,8,8,8,]),'STRING':([0,4,5,12,21,22,24,27,31,32,33,34,38,45,49,51,68,71,75,79,80,85,86,90,93,94,95,96,97,98,99,104,105,106,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,142,149,150,151,153,165,166,],[9,9,-2,9,9,32,-5,9,-65,-66,-67,-68,9,9,9,-3,32,32,32,32,32,32,32,32,32,-48,-49,-50,-51,-52,-53,32,32,-4,32,32,32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,32,32,9,9,9,32,9,9,]),'BOOLEAN':([0,4,5,12,21,24,27,38,45,49,51,106,149,150,151,165,166,],[10,10,-2,10,10,-5,10,10,10,10,-3,-4,10,10,10,10,10,]),'LPAREN':([6,13,31,32,33,34,64,65,66,68,71,72,79,80,85,86,87,88,89,90,93,94,95,96,97,98,99,104,105,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,142,143,145,147,148,153,158,],[12,21,-65,-66,-67,-68,79,80,81,90,90,104,90,90,90,90,-61,-62,-63,90,90,-48,-49,-50,-51,-52,-53,90,90,139,90,90,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-59,90,90,-57,-64,-34,-56,90,-60,]),'ε':([12,21,24,38,44,45,46,49,53,55,56,57,58,59,60,61,71,73,77,78,82,83,104,112,131,133,149,150,151,160,161,165,166,169,170,],[18,18,-5,46,54,46,-75,46,54,-16,-17,-18,-19,-20,-21,-22,102,-74,-23,-24,-29,-32,102,-33,-30,-31,46,46,46,-25,-27,46,46,-26,-28,]),'COMMA':([13,15,19,28,30,31,32,33,34,37,42,48,137,],[-6,25,27,-13,-7,-65,-66,-67,-68,-6,-8,-14,-9,]),';':([13,14,15,30,31,32,33,34,36,37,42,137,],[-6,24,-77,-7,-65,-66,-67,-68,-76,-6,-8,-9,]),'ASSIGN':([13,37,42,70,72,92,148,],[22,22,50,94,-55,-55,-56,]),'LCOR':([13,28,37,72,92,],[23,40,23,105,105,]),'RPAREN':([16,17,18,19,28,29,31,32,33,34,39,48,72,87,88,89,101,102,103,109,110,128,129,130,132,135,143,145,146,147,148,158,162,],[26,-69,-70,-73,-13,41,-65,-66,-67,-68,-72,-14,-55,-61,-62,-63,-84,-85,-87,140,141,-58,-59,145,-54,147,-57,-64,-86,-34,-56,-60,164,]),'NUMBER':([22,23,31,32,33,34,68,71,75,79,80,85,86,90,93,94,95,96,97,98,99,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,142,153,],[31,35,-65,-66,-67,-68,31,31,31,31,31,31,31,31,31,-48,-49,-50,-51,-52,-53,31,31,31,31,31,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,31,31,31,]),'TRUE':([22,31,32,33,34,68,71,75,79,80,85,86,90,93,94,95,96,97,98,99,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,142,153,],[33,-65,-66,-67,-68,33,33,33,33,33,33,33,33,33,-48,-49,-50,-51,-52,-53,33,33,33,33,33,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,33,33,33,]),'FALSE':([22,31,32,33,34,68,71,75,79,80,85,86,90,93,94,95,96,97,98,99,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,142,153,],[34,-65,-66,-67,-68,34,34,34,34,34,34,34,34,34,-48,-49,-50,-51,-52,-53,34,34,34,34,34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,34,34,34,]),'LKEY':([26,41,50,139,140,141,163,164,],[38,49,75,149,150,151,165,166,]),'SEMICOLON':([31,32,33,34,62,63,67,68,72,84,87,88,89,91,92,100,101,102,103,111,128,129,132,143,145,146,147,148,152,158,],[-65,-66,-67,-68,77,78,82,83,-55,112,-61,-62,-63,131,-55,133,-84,-85,-87,142,-58,-59,-54,-57,-64,-86,-34,-56,157,-60,]),'?':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,114,-61,-62,-63,114,114,114,114,114,114,114,114,114,114,-64,-34,-56,114,114,]),'PLUS':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,115,-61,-62,-63,115,115,115,115,115,115,115,115,115,115,-64,-34,-56,115,115,]),'MINUS':([31,32,33,34,68,71,72,79,80,84,85,86,87,88,89,90,93,94,95,96,97,98,99,103,104,105,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,134,136,142,143,144,145,147,148,152,153,158,],[-65,-66,-67,-68,86,86,-55,86,86,116,86,86,-61,-62,-63,86,86,-48,-49,-50,-51,-52,-53,116,86,86,116,116,86,86,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,116,116,116,116,86,116,86,116,116,-64,-34,-56,116,86,116,]),'MULT':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,117,-61,-62,-63,117,117,117,117,117,117,117,117,117,117,-64,-34,-56,117,117,]),'DIVIDE':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,118,-61,-62,-63,118,118,118,118,118,118,118,118,118,118,-64,-34,-56,118,118,]),'MOD':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,119,-61,-62,-63,119,119,119,119,119,119,119,119,119,119,-64,-34,-56,119,119,]),'EQUALS':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,120,-61,-62,-63,120,120,120,120,120,120,120,120,120,120,-64,-34,-56,120,120,]),'DIFFERENT':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,121,-61,-62,-63,121,121,121,121,121,121,121,121,121,121,-64,-34,-56,121,121,]),'LTE':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,122,-61,-62,-63,122,122,122,122,122,122,122,122,122,122,-64,-34,-56,122,122,]),'GTE':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,123,-61,-62,-63,123,123,123,123,123,123,123,123,123,123,-64,-34,-56,123,123,]),'GT':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,124,-61,-62,-63,124,124,124,124,124,124,124,124,124,124,-64,-34,-56,124,124,]),'LT':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,125,-61,-62,-63,125,125,125,125,125,125,125,125,125,125,-64,-34,-56,125,125,]),'AND':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,126,-61,-62,-63,126,126,126,126,126,126,126,126,126,126,-64,-34,-56,126,126,]),'OR':([31,32,33,34,72,84,87,88,89,103,109,110,128,129,130,132,136,143,144,145,147,148,152,158,],[-65,-66,-67,-68,-55,127,-61,-62,-63,127,127,127,127,127,127,127,127,127,127,-64,-34,-56,127,127,]),',':([31,32,33,34,72,87,88,89,103,128,129,143,145,147,148,158,],[-65,-66,-67,-68,-55,-61,-62,-63,134,-58,-59,-57,-64,-34,-56,-60,]),'RKEY':([31,32,33,34,43,52,54,74,76,107,108,138,154,155,156,167,168,],[-65,-66,-67,-68,51,-15,-81,106,-80,137,-83,-82,159,160,161,169,170,]),'RCOR':([31,32,33,34,35,40,72,87,88,89,128,129,136,143,145,147,148,158,],[-65,-66,-67,-68,42,48,-55,-61,-62,-63,-58,-59,148,-57,-64,-34,-56,-60,]),':':([31,32,33,34,72,87,88,89,128,129,143,144,145,147,148,158,],[-65,-66,-67,-68,-55,-61,-62,-63,-58,-59,-57,153,-64,-34,-56,-60,]),'IF':([44,46,53,55,56,57,58,59,60,61,73,77,78,82,83,112,131,133,160,161,169,170,],[64,-75,64,-16,-17,-18,-19,-20,-21,-22,-74,-23,-24,-29,-32,-33,-30,-31,-25,-27,-26,-28,]),'WHILE':([44,46,53,55,56,57,58,59,60,61,73,77,78,82,83,112,131,133,160,161,169,170,],[65,-75,65,-16,-17,-18,-19,-20,-21,-22,-74,-23,-24,-29,-32,-33,-30,-31,-25,-27,-26,-28,]),'FOR':([44,46,53,55,56,57,58,59,60,61,73,77,78,82,83,112,131,133,160,161,169,170,],[66,-75,66,-16,-17,-18,-19,-20,-21,-22,-74,-23,-24,-29,-32,-33,-30,-31,-25,-27,-26,-28,]),'BREAK':([44,46,53,55,56,57,58,59,60,61,73,77,78,82,83,112,131,133,160,161,169,170,],[67,-75,67,-16,-17,-18,-19,-20,-21,-22,-74,-23,-24,-29,-32,-33,-30,-31,-25,-27,-26,-28,]),'RETURN':([44,46,53,55,56,57,58,59,60,61,73,77,78,82,83,112,131,133,160,161,169,170,],[68,-75,68,-16,-17,-18,-19,-20,-21,-22,-74,-23,-24,-29,-32,-33,-30,-31,-25,-27,-26,-28,]),'READ':([44,46,53,55,56,57,58,59,60,61,73,77,78,82,83,112,131,133,160,161,169,170,],[69,-75,69,-16,-17,-18,-19,-20,-21,-22,-74,-23,-24,-29,-32,-33,-30,-31,-25,-27,-26,-28,]),'WRITE':([44,46,53,55,56,57,58,59,60,61,73,77,78,82,83,112,131,133,160,161,169,170,],[71,-75,71,-16,-17,-18,-19,-20,-21,-22,-74,-23,-24,-29,-32,-33,-30,-31,-25,-27,-26,-28,]),'NOT':([68,71,79,80,85,86,90,93,94,95,96,97,98,99,104,105,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,142,153,],[85,85,85,85,85,85,85,85,-48,-49,-50,-51,-52,-53,85,85,85,85,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,85,85,85,]),'PLUSASSIGN':([70,72,92,148,],[95,-55,-55,-56,]),'MINUSASSIGN':([70,72,92,148,],[96,-55,-55,-56,]),'MULTASSIGN':([70,72,92,148,],[97,-55,-55,-56,]),'DIVIDEASSIGN':([70,72,92,148,],[98,-55,-55,-56,]),'MODASSIGN':([70,72,92,148,],[99,-55,-55,-56,]),'ELSE':([159,],[163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'sequenciaDeclaracao':([0,4,],[2,11,]),'empty':([0,],[3,]),'declaracao':([0,4,],[4,4,]),'variavelDeclaracao':([0,4,38,45,49,149,150,151,165,166,],[5,5,45,45,45,45,45,45,45,45,]),'tipo':([0,4,12,21,27,38,45,49,149,150,151,165,166,],[7,7,20,20,20,47,47,47,47,47,47,47,47,]),'variavelEspecificacaoSeq':([7,25,47,],[14,36,14,]),'variavelEspecificacao':([7,25,47,],[15,15,15,]),'listaParametro':([12,21,],[16,29,]),'sequenciaParametro':([12,21,27,],[17,17,39,]),'parametro':([12,21,27,],[19,19,19,]),'valor':([22,68,71,75,79,80,85,86,90,93,104,105,108,113,114,134,142,153,],[30,89,89,108,89,89,89,89,89,89,89,89,108,89,89,89,89,89,]),'bloco':([38,49,149,150,151,165,166,],[43,74,154,155,156,167,168,]),'variavelDeclaracaoList':([38,45,49,149,150,151,165,166,],[44,73,44,44,44,44,44,44,]),'listaComando':([44,53,],[52,76,]),'comando':([44,53,],[53,53,]),'comandoIf':([44,53,],[55,55,]),'comandoWhile':([44,53,],[56,56,]),'comandoFor':([44,53,],[57,57,]),'comandoBreak':([44,53,],[58,58,]),'comandoReturn':([44,53,],[59,59,]),'comandoRead':([44,53,],[60,60,]),'comandoWrite':([44,53,],[61,61,]),'expressaoAtrib':([44,53,81,157,],[62,62,111,162,]),'chamadaDeFuncao':([44,53,68,71,79,80,85,86,90,93,104,105,113,114,134,142,153,],[63,63,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'variavel':([44,53,68,69,71,79,80,81,85,86,90,93,104,105,113,114,134,142,153,157,],[70,70,88,91,88,88,88,70,88,88,88,88,88,88,88,88,88,88,88,70,]),'expressao':([68,71,79,80,85,86,90,93,104,105,113,114,134,142,153,],[84,103,109,110,128,129,130,132,103,136,143,144,103,152,158,]),'opAtrib':([70,],[93,]),'listaExpressao':([71,104,],[100,135,]),'sequenciaExpressao':([71,104,134,],[101,101,146,]),'sequenciaValor':([75,108,],[107,138,]),'op':([84,103,109,110,128,129,130,132,136,143,144,152,158,],[113,113,113,113,113,113,113,113,113,113,113,113,113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sequenciaDeclaracao','program',1,'p_program','analisadorSintatico.py',39),
  ('declaracao -> variavelDeclaracao','declaracao',1,'p_declaracao','analisadorSintatico.py',47),
  ('declaracao -> ID LPAREN listaParametro RPAREN LKEY bloco RKEY','declaracao',7,'p_declaracao','analisadorSintatico.py',48),
  ('declaracao -> tipo ID LPAREN listaParametro RPAREN LKEY bloco RKEY','declaracao',8,'p_declaracao','analisadorSintatico.py',49),
  ('variavelDeclaracao -> tipo variavelEspecificacaoSeq ;','variavelDeclaracao',3,'p_variavelDeclaracao','analisadorSintatico.py',61),
  ('variavelEspecificacao -> ID','variavelEspecificacao',1,'p_variavelEspecificacao','analisadorSintatico.py',68),
  ('variavelEspecificacao -> ID ASSIGN valor','variavelEspecificacao',3,'p_variavelEspecificacao','analisadorSintatico.py',69),
  ('variavelEspecificacao -> ID LCOR NUMBER RCOR','variavelEspecificacao',4,'p_variavelEspecificacao','analisadorSintatico.py',70),
  ('variavelEspecificacao -> ID LCOR NUMBER RCOR ASSIGN LKEY sequenciaValor RKEY','variavelEspecificacao',8,'p_variavelEspecificacao','analisadorSintatico.py',71),
  ('tipo -> INT','tipo',1,'p_tipo','analisadorSintatico.py',85),
  ('tipo -> STRING','tipo',1,'p_tipo','analisadorSintatico.py',86),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','analisadorSintatico.py',87),
  ('parametro -> tipo ID','parametro',2,'p_parametro','analisadorSintatico.py',94),
  ('parametro -> tipo ID LCOR RCOR','parametro',4,'p_parametro','analisadorSintatico.py',95),
  ('bloco -> variavelDeclaracaoList listaComando','bloco',2,'p_bloco','analisadorSintatico.py',105),
  ('comando -> comandoIf','comando',1,'p_comando','analisadorSintatico.py',112),
  ('comando -> comandoWhile','comando',1,'p_comando','analisadorSintatico.py',113),
  ('comando -> comandoFor','comando',1,'p_comando','analisadorSintatico.py',114),
  ('comando -> comandoBreak','comando',1,'p_comando','analisadorSintatico.py',115),
  ('comando -> comandoReturn','comando',1,'p_comando','analisadorSintatico.py',116),
  ('comando -> comandoRead','comando',1,'p_comando','analisadorSintatico.py',117),
  ('comando -> comandoWrite','comando',1,'p_comando','analisadorSintatico.py',118),
  ('comando -> expressaoAtrib SEMICOLON','comando',2,'p_comando','analisadorSintatico.py',119),
  ('comando -> chamadaDeFuncao SEMICOLON','comando',2,'p_comando','analisadorSintatico.py',120),
  ('comandoIf -> IF LPAREN expressao RPAREN LKEY bloco RKEY','comandoIf',7,'p_comandoIf','analisadorSintatico.py',130),
  ('comandoIf -> IF LPAREN expressao LPAREN LKEY bloco RKEY ELSE LKEY bloco RKEY','comandoIf',11,'p_comandoIf','analisadorSintatico.py',131),
  ('comandoWhile -> WHILE LPAREN expressao RPAREN LKEY bloco RKEY','comandoWhile',7,'p_comandoWhile','analisadorSintatico.py',142),
  ('comandoFor -> FOR LPAREN expressaoAtrib SEMICOLON expressao SEMICOLON expressaoAtrib RPAREN LKEY bloco RKEY','comandoFor',11,'p_comandoFor','analisadorSintatico.py',150),
  ('comandoBreak -> BREAK SEMICOLON','comandoBreak',2,'p_comandoBreak','analisadorSintatico.py',158),
  ('comandoRead -> READ variavel SEMICOLON','comandoRead',3,'p_comandoRead','analisadorSintatico.py',166),
  ('comandoWrite -> WRITE listaExpressao SEMICOLON','comandoWrite',3,'p_comandoWrite','analisadorSintatico.py',174),
  ('comandoReturn -> RETURN SEMICOLON','comandoReturn',2,'p_comandoReturn','analisadorSintatico.py',182),
  ('comandoReturn -> RETURN expressao SEMICOLON','comandoReturn',3,'p_comandoReturn','analisadorSintatico.py',183),
  ('chamadaDeFuncao -> ID LPAREN listaExpressao RPAREN','chamadaDeFuncao',4,'p_chamadaDeFuncao','analisadorSintatico.py',193),
  ('op -> PLUS','op',1,'p_op','analisadorSintatico.py',200),
  ('op -> MINUS','op',1,'p_op','analisadorSintatico.py',201),
  ('op -> MULT','op',1,'p_op','analisadorSintatico.py',202),
  ('op -> DIVIDE','op',1,'p_op','analisadorSintatico.py',203),
  ('op -> MOD','op',1,'p_op','analisadorSintatico.py',204),
  ('op -> EQUALS','op',1,'p_op','analisadorSintatico.py',205),
  ('op -> DIFFERENT','op',1,'p_op','analisadorSintatico.py',206),
  ('op -> LTE','op',1,'p_op','analisadorSintatico.py',207),
  ('op -> GTE','op',1,'p_op','analisadorSintatico.py',208),
  ('op -> GT','op',1,'p_op','analisadorSintatico.py',209),
  ('op -> LT','op',1,'p_op','analisadorSintatico.py',210),
  ('op -> AND','op',1,'p_op','analisadorSintatico.py',211),
  ('op -> OR','op',1,'p_op','analisadorSintatico.py',212),
  ('opAtrib -> ASSIGN','opAtrib',1,'p_opAtrib','analisadorSintatico.py',245),
  ('opAtrib -> PLUSASSIGN','opAtrib',1,'p_opAtrib','analisadorSintatico.py',246),
  ('opAtrib -> MINUSASSIGN','opAtrib',1,'p_opAtrib','analisadorSintatico.py',247),
  ('opAtrib -> MULTASSIGN','opAtrib',1,'p_opAtrib','analisadorSintatico.py',248),
  ('opAtrib -> DIVIDEASSIGN','opAtrib',1,'p_opAtrib','analisadorSintatico.py',249),
  ('opAtrib -> MODASSIGN','opAtrib',1,'p_opAtrib','analisadorSintatico.py',250),
  ('expressaoAtrib -> variavel opAtrib expressao','expressaoAtrib',3,'p_expressaoAtrib','analisadorSintatico.py',269),
  ('variavel -> ID','variavel',1,'p_variavel','analisadorSintatico.py',276),
  ('variavel -> ID LCOR expressao RCOR','variavel',4,'p_variavel','analisadorSintatico.py',277),
  ('expressao -> expressao op expressao','expressao',3,'p_expressao','analisadorSintatico.py',287),
  ('expressao -> NOT expressao','expressao',2,'p_expressao','analisadorSintatico.py',288),
  ('expressao -> MINUS expressao','expressao',2,'p_expressao','analisadorSintatico.py',289),
  ('expressao -> expressao ? expressao : expressao','expressao',5,'p_expressao','analisadorSintatico.py',290),
  ('expressao -> chamadaDeFuncao','expressao',1,'p_expressao','analisadorSintatico.py',291),
  ('expressao -> variavel','expressao',1,'p_expressao','analisadorSintatico.py',292),
  ('expressao -> valor','expressao',1,'p_expressao','analisadorSintatico.py',293),
  ('expressao -> LPAREN expressao RPAREN','expressao',3,'p_expressao','analisadorSintatico.py',294),
  ('valor -> NUMBER','valor',1,'p_valor','analisadorSintatico.py',311),
  ('valor -> STRING','valor',1,'p_valor','analisadorSintatico.py',312),
  ('valor -> TRUE','valor',1,'p_valor','analisadorSintatico.py',313),
  ('valor -> FALSE','valor',1,'p_valor','analisadorSintatico.py',314),
  ('listaParametro -> sequenciaParametro','listaParametro',1,'p_listaParametro','analisadorSintatico.py',321),
  ('listaParametro -> ε','listaParametro',1,'p_listaParametro','analisadorSintatico.py',322),
  ('program -> empty','program',1,'p_listaParametroNull','analisadorSintatico.py',329),
  ('sequenciaParametro -> parametro COMMA sequenciaParametro','sequenciaParametro',3,'p_sequenciaParametro','analisadorSintatico.py',336),
  ('sequenciaParametro -> parametro','sequenciaParametro',1,'p_sequenciaParametro','analisadorSintatico.py',337),
  ('variavelDeclaracaoList -> variavelDeclaracao variavelDeclaracaoList','variavelDeclaracaoList',2,'p_variavelDeclaracaoList','analisadorSintatico.py',347),
  ('variavelDeclaracaoList -> ε','variavelDeclaracaoList',1,'p_variavelDeclaracaoList','analisadorSintatico.py',348),
  ('variavelEspecificacaoSeq -> variavelEspecificacao COMMA variavelEspecificacaoSeq','variavelEspecificacaoSeq',3,'p_variavelEspecificacaoSeq','analisadorSintatico.py',359),
  ('variavelEspecificacaoSeq -> variavelEspecificacao','variavelEspecificacaoSeq',1,'p_variavelEspecificacaoSeq','analisadorSintatico.py',360),
  ('sequenciaDeclaracao -> declaracao sequenciaDeclaracao','sequenciaDeclaracao',2,'p_sequenciaDeclaracao','analisadorSintatico.py',370),
  ('sequenciaDeclaracao -> declaracao','sequenciaDeclaracao',1,'p_sequenciaDeclaracao','analisadorSintatico.py',371),
  ('listaComando -> comando listaComando','listaComando',2,'p_listaComando','analisadorSintatico.py',381),
  ('listaComando -> ε','listaComando',1,'p_listaComando','analisadorSintatico.py',382),
  ('sequenciaValor -> valor sequenciaValor','sequenciaValor',2,'p_sequencialValor','analisadorSintatico.py',393),
  ('sequenciaValor -> valor','sequenciaValor',1,'p_sequencialValor','analisadorSintatico.py',394),
  ('listaExpressao -> sequenciaExpressao','listaExpressao',1,'p_listaExpressao','analisadorSintatico.py',404),
  ('listaExpressao -> ε','listaExpressao',1,'p_listaExpressao','analisadorSintatico.py',405),
  ('sequenciaExpressao -> expressao , sequenciaExpressao','sequenciaExpressao',3,'p_sequencialExpressao','analisadorSintatico.py',417),
  ('sequenciaExpressao -> expressao','sequenciaExpressao',1,'p_sequencialExpressao','analisadorSintatico.py',418),
  ('empty -> <empty>','empty',0,'p_empty','analisadorSintatico.py',427),
]
